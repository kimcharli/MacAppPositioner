# .gemini/commands/document-commit-push.toml

# Reference: https://github.com/google-gemini/gemini-cli/blob/main/docs/cli/commands.md#custom-commands

# Defines the /document-commit-push command.
prompt = '''
You are an expert developer responsible for finalizing documentation and committing code. Your task is to automatically update the necessary documentation, update the changelog, and then commit and push the changes without prompting for confirmation.

You will be given a summary of the changes as an argument: `{{args}}`

Here are the steps you will follow immediately:

1.  **Analyze the changes:** Review the staged git changes to understand the scope of the work. Use `git diff --staged`.
2.  **Update Documentation:** Based on the changes, update any relevant documentation files in the `/docs` directory to reflect the new state of the code.
3.  **Update CHANGELOG.md:** Add a new entry to `CHANGELOG.md` summarizing the changes. Follow the existing format of the changelog.
4.  **Commit Changes:**
    *   Stage all the updated documentation and the `CHANGELOG.md` file using `git add`.
    *   Create a descriptive commit message that follows conventional commit standards. The commit message should be based on the user's input (`{{args}}`) and your analysis.
    *   Commit the changes using `git commit`.
5.  **Push Changes:** Push the new commit to the remote repository using `git push`.

This process will run automatically without any user interaction.
'''
